#version 330 core

layout (location=0) in vec3 vertexPos;
layout (location=1) in vec2 vertexTexCoord;
layout (location=2) in vec3 vertexNormal;

//Reference : Title: <computerGraphicsPracs
//Prac4 - Textures Cubemaps and Lighting>
//Author:  Andrew Mengede
//Date: May 2023
//Code version: <b37f2baa93d67bf6b09d0a377f3c220a13811dec>
//Availability: <https://github.com/amengede/computerGraphicsPracs/tree/main/Prac4%20-%20Textures%20Cubemaps%20and%20Lighting>


uniform mat4 model;
uniform mat4 view;
uniform mat4 projection;


out vec2 fragmentTexCoord;
out vec3 fragNormal;


void main()
{
    gl_Position = projection * view * model * vec4(vertexPos, 1.0);
    fragmentTexCoord = vertexTexCoord;
    fragNormal=vertexNormal;
}